{"version":3,"file":"index.js","sources":["../index.js"],"sourcesContent":["const clog = console.log\n// const j = (o) => {\n// clog(JSON.parse(JSON.stringify(o)))\n// }\nlet isRunning = false\nlet cancelCurrentStack = () => {}\nconst EMPTYVALUE = Symbol.for('empty')\n\n// 改为从datastone中引入\nclass Queue {\n  constructor() {\n    this._box = []\n    // this.head = null\n  }\n  getHead() {\n    return this._box[0]\n  }\n}\nclass PriorityQueue extends Queue {\n  constructor() {\n    super()\n    this.priorityList = new Map() // {priority: lastIndex}\n  }\n}\nclass StackPriorityQueue extends PriorityQueue {\n  constructor() {\n    super()\n    // this.priorityList = []\n  }\n  // 放入队列并返回下标\n  entryQueue(stack) {\n    if (!this._box.length) {\n      this._box.push(stack)\n    } else if (this._box[0].priority < stack.priority) {\n      this._box.unshift(stack)\n    } else if (this._box[this._box.length - 1].priority >= stack.priority) {\n      this._box.push(stack)\n    } else {\n      // 二分查找会更好\n      // let index = this._box.length >> 1\n      // while (this._box[index] =)\n      let index = 0\n      while (index < this._box.length - 1) {\n        if (\n          this._box[index].priority >= stack.priority &&\n          stack.priority > this._box[index + 1].priority\n        ) {\n          this._box.splice(index + 1, 0, stack)\n          break\n        } else {\n          index++\n        }\n      }\n    }\n  }\n  // 出队列\n  outQueue() {\n    this._box.shift()\n  }\n  // 运行队列中的任务\n  // runQueue() {\n  //     // clog(j(stackList))\n  //     clog('runQueue', isRunning)\n  //     if (!isRunning) {\n  //         runStackList()\n  //     }\n  // }\n}\n// let f = () => {}\n\nclass Dogleg {\n  constructor(opStack) {\n    this.opStack = opStack\n    this.stackList = new StackPriorityQueue()\n    this.interrupt = () => {}\n    // this.cancelCurrentStack =\n    this.isRunning = false // 后续设置为不可修改的值\n  }\n  runQueue() {\n    if (!this.isRunning) {\n      this.runStackList()\n    }\n  }\n  runStackList() {\n    let stack = this.stackList.getHead()\n    // clog('stack', stack)\n    if (stack) {\n      this.isRunning = true // 开始执行任务\n      let { promiseRace, cancelCurrentStack: cp } = this.runStack(stack)\n      this.interrupt = this.createCancel(cp)\n      promiseRace.then((v) => {\n        // console.log('v', v)\n        if (v !== EMPTYVALUE) {\n          this.stackList.outQueue()\n          this.runStackList()\n        }\n      })\n    } else {\n      this.isRunning = false\n    }\n  }\n  runStack(stack) {\n    let p1 = new Promise((s, j) => {\n      let r = this.opStack(stack)\n      s(r)\n    })\n    let waitF = () => {}\n    let cancelCurrentStack = () => {\n      waitF(EMPTYVALUE)\n    }\n    let p2 = new Promise((s) => {\n      waitF = s\n    })\n    let promiseRace = Promise.race([p1, p2])\n    return { promiseRace, cancelCurrentStack }\n  }\n  createCancel = (cp) => {\n    return () => {\n      this.isRunning = false\n      cp()\n    }\n  }\n}\n\nexport default Dogleg\n// module.exports = Dogleg\n"],"names":[],"mappings":"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"}